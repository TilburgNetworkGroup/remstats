% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remstats.R
\name{remstats}
\alias{remstats}
\title{remstats}
\usage{
remstats(edgelist, effects, directed = TRUE, type = FALSE,
  timing = "interval", standardize = FALSE, riskset = NULL,
  actors = NULL, covariates = NULL, event_effect = NULL,
  weights = NULL, equal_val = NULL)
}
\arguments{
\item{edgelist}{[matrix] or [dataframe], should minimally contain the time, 
sender/actor 1 and receiver/actor 2 in the first three columns respectively. 
If the riskset contains typed relational events, the fourth column should 
contain the event type.}

\item{effects}{[character vector], indicates the effects that are requested.}

\item{directed}{[logical], are relational events in the riskset directional 
(directed = TRUE, default) or undirectional (directed = FALSE).}

\item{type}{[logical], do relational events in the riskset consider an 
action type (type = TRUE) or not (type = FALSE, default).}

\item{timing}{[character value], indicates whether the full likelihood 
(timing = "interval", default) or ordinal likelihod (timing = "ordinal") 
will be used for estimation. If interval timing, a baseline statistic is 
added to the statistic array.}

\item{standardize}{[logical], indicates whether endogenous effects should be 
standardized (default = FALSE)}

\item{riskset}{optional; [matrix] or [dataframe], should minimally contain 
sender/actor 1 and receiver/actor 2 in the first two columns, respectively. 
If it contains typed relational events, the third column should contain the 
event type. If a riskset is not supplied, it is assumed that all possible 
actors (and action types) are observed in the edgelist.}

\item{actors}{optional; [vector], if supplied, should contain all actors 
that can potentially interact. Used to create the riskset.}

\item{covariates}{optional; [List] with the covariate values for when a 
sender_effect, receiver_effect, same, difference, mean, min, max, or 
both_equal_to effect are requested. Covariate values should be supplied to 
an element with the name equal to the requested effect. Covariate values 
should be supplied in a matrix with in the first column the actor IDs, the 
second column the time at which covariate values change (can be set to zero 
for time-invariant covariates) and in subsequent columns the unique 
covariate variables for which the respective effect is requested.}

\item{event_effect}{optional; matrix with the values for when an 
event_effect is requested: one column of length edgelist per event_effect.}

\item{weights}{optional; [vector], if supplied, should be of length edgelist 
and contain the weights for the events in the edgelist (to compute 
inertia_weighted)}

\item{equal_val}{optional; [vector]. Required if the "both_equal_to" effect 
is requested. Denotes the value(s) to which both covariate values of the 
actors in a dyad should be equal.}
}
\value{
statistics [array], with three dimensions: timepoint x riskset x 
statistic.

edgelist [matrix] with actor IDs that run from 1 to N and types that 
run from 1 to C.

riskset [matrix], with actor IDs that run from 1 to N and types that
run from 1 to C.

evls [matrix], edgelist transformed in the format that is required 
for estimation by relevent::rem() with in the first column the relational 
event ID and in the second column the time.

actors [vector], all unique actor IDs
}
\description{
A function to compute statistics for a relational event sequence.
}
\examples{
data(edgelistD)
data(covar)
effects <- c("difference", "both_equal_to", "inertia", "indegree_receiver", 
 "outdegree_sender")
covariates <- list(difference = covar, both_equal_to = covar[,c(1:2, 4)])
out <- remstats(edgelistD, effects, covariates = covariates, equal_val = 0)
fit <- relevent::rem(out$evls, out$statistics)
summary(fit)

}
