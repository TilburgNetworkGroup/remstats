% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/effects.R
\name{totaldegreeDyad}
\alias{totaldegreeDyad}
\title{totaldegreeDyad}
\usage{
totaldegreeDyad(scaling = c("none", "prop", "std"), consider_type = FALSE)
}
\arguments{
\item{scaling}{the method for scaling the degree statistic. Default is
to not scale the statistic (scaling = "none"). Alternatively,
scaling of the raw degree counts by two times the number of past events at
time t can be requested with 'prop' or standardization of the raw degree
counts per time point can be requested with 'std'.}

\item{consider_type}{logical, indicates whether to count the degrees
separately for each event type (TRUE) or sum degrees across different event
types (FALSE, default).}
}
\description{
Specifies the statistic for a `totaldegreeDyad` effect.
}
\details{
The totaldegreeDyad effect describes the tendency for dyads to increase their
interaction rate when the total degree of the two actors in the pair
increases. The statistic at timepoint \emph{t} for dyad \emph{(i,j)} is
computed by summing the degrees of the actors in the pair \emph{(i,j)}.

Optionally, a scaling method can be applied using the \code{scaling} 
argument. When using the "prop" scaling method, the degree count is divided 
by the total number of past events times two. This scaling transforms the 
statistic in a fraction, representing the proportion of past events times 
two in which at least one actor in the dyad was involved. In the case of the 
first timepoint, where no events have occurred previously, it assumes that 
each actor is equally likely to be involved in an event. In this scenario, 
the statistic is set to 2 divied by the number of actors \emph{n}.

The totaldegreeDyad effect is defined for the tie-oriented model, both for 
directed and undirected events.
}
\examples{
reh_tie <- remify::remify(history, model = "tie")
effects <- ~ totaldegreeDyad()
remstats(reh = reh_tie, tie_effects = effects)

}
