% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/effects.R
\name{tie}
\alias{tie}
\title{tie}
\usage{
tie(x, variableName = NULL, scaling = c("none", "std"))
}
\arguments{
\item{x}{a matrix with attribute information, rows and columns should refer
to actors in the edgelist}

\item{variableName}{optionally, a string indicating the variable name, used
for the dimnames of the output statistics object}

\item{scaling}{the method for scaling the statistic. Default is to not scale
the statistic. Alternatively, standardization of the statistic per time 
point can be requested with "std".}
}
\description{
Specifies the statistic for a "tie" (or, "dyad") effect in the tie-oriented
model or the receiver choice step of the actor-oriented model. A "tie"
effect refers to an exogenous dyad attribute that affects dyad
\emph{(i,j)}'s rate of interacting (tie-oriented model) or actor \emph{j}'s
probability of being chosen as a receiver for the event send by the active
sender \emph{i} (actor-oriented model).
}
\details{
The statistic is equal to the value of the exogenous attribute for
dyad \emph{(i,j)} in matrix \code{x}.
}
\examples{
data(info, package = "remstats")
actors <- unique(info$name)
age <- info[match(actors, info$name), "age"]
both_old <- sapply(seq_along(actors), function(i) {
    sapply(seq_along(actors), function(j) {
        ifelse(age[i] == 1 & age[j] == 1 & i != j, 1, 0)
    })
})
rownames(both_old) <- colnames(both_old) <- actors
reh_tie <- remify::remify(history, model = "tie")
effects <- ~ tie(both_old, variableName = "both.old")
remstats(reh = reh_tie, tie_effects = effects, attr_data = info)

reh_actor <- remify::remify(history, model = "actor")
remstats(reh = reh_actor, receiver_effects = effects, attr_data = info)

}
